@charset "UTF-8";

/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */

article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

figcaption,
figure {
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * Add the correct display in IE.
 */

main {
  display: block;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Links
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 */

button {
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
  /* 2 */
}

button,
[type=button],
[type=reset],
[type=submit] {
  /**
   * Remove the inner border and padding in Firefox.
   */
  /**
   * Restore the focus styles unset by the previous rule.
   */
}

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Show the overflow in Edge.
 */

input {
  overflow: visible;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
   * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
   */
}

[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/*
 * Add the correct display in IE 9-.
 */

menu {
  display: block;
}

/* Scripting
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */

template {
  display: none;
}

/* Hidden
   ========================================================================== */

/**
 * Add the correct display in IE 10-.
 */

[hidden] {
  display: none;
}

@font-face {
  font-family: montserrat;
  font-weight: 400;
  font-display: swap;
  src: url("../fonts/montserrat - 400.woff2") format("woff2"), url("../fonts/montserrat - 400.woff") format("woff");
}

@font-face {
  font-family: montserrat;
  font-weight: 500;
  font-display: swap;
  src: url("../fonts/montserrat - 500.woff2") format("woff2"), url("../fonts/montserrat - 500.woff") format("woff");
}

@font-face {
  font-family: montserrat;
  font-weight: 700;
  font-display: swap;
  src: url("../fonts/montserrat - 700.woff2") format("woff2"), url("../fonts/montserrat - 700.woff") format("woff");
}

html {
  position: relative;
  box-sizing: border-box;
  min-width: 320px;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  min-height: 100vh;
  font-family: Montserrat, sans-serif;
  font-size: 12px;
  font-weight: 400;
  font-style: normal;
  color: #FFFFFF;
  background-color: #000000;
  background-image: url("../img/bg.svg");
  background-repeat: no-repeat;
  background-size: cover;
  /*заполнит вспроставнство*/
  background-position: top 150px center;
  /*на 150 px  отталкиваемся от верха*/
  background-attachment: fixed;
  line-height: 1.2;
}

img {
  max-width: 100%;
  height: auto;
}

input,
button,
textarea {
  font: inherit;
}

button {
  padding: 0;
  cursor: pointer;
}

a {
  text-decoration: none;
  color: inherit;
  /*наследуем от родителя*/
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

h1,
h2,
h3,
p,
figure,
fieldset {
  margin: 0;
  padding: 0;
}

iframe {
  border: none;
}

.visually-hidden {
  /*робот=поисковик уивдит этот элемент*/
  position: absolute !important;
  clip: rect(1px 1px 1px 1px);
  /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden;
}

/*
  Пример контейнера
  Если контейнер 1080px по макету,
  то для max-width прибавляем паддинги 30px*2, 
  в итоге 1240px
  Чтобы контент не прижимался к краям экрана
  */

.container {
  max-width: 1100px;
  padding: 0 30px;
  margin: 0 auto;
}

.hide {
  display: none;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

.no-valid {
  outline: 3px solid tomato;
}

.header {
  padding: 8px 0;
}

.header__container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.header__logo {
  height: 40px;
  margin-right: auto;
}

.header__btn-add {
  display: none;
}

.header__btn {
  width: 40px;
  height: 40px;
  background-size: 24px;
  background-repeat: no-repeat;
  background-color: transparent;
  background-position: center right;
  border: 0;
}

.header__btn--search {
  background-image: url("../img/Search.svg");
}

.header__btn--back {
  background-image: url("../img/back.svg");
}

.header__btn--delete {
  background-image: url("../img/delete.svg");
}

.library {
  padding-bottom: 80px;
}

.library::before {
  content: "";
  position: absolute;
  display: block;
  left: -66px;
  top: -63px;
  width: 174px;
  height: 174px;
  background-color: #FF0000;
  filter: blur(120px);
  z-index: 1;
}

.library__header {
  margin-bottom: 15px;
}

.library__titles {
  margin-bottom: 20px;
}

.library__title {
  margin-bottom: 8px;
  font-style: normal;
  font-weight: 700;
  font-size: 26px;
  line-height: 32px;
}

.library__count {
  margin-bottom: 25px;
  font-size: 14px;
  line-height: 120%;
  color: #EAEAEA;
}

.library__fields {
  display: flex;
}

.library__list {
  display: flex;
  flex-wrap: wrap;
  gap: 15px 26px;
  max-width: 780px;
}

.library__add-btn {
  width: 44px;
  height: 44px;
  color: #F87C09;
  background-color: transparent;
  border: 0;
}

.fields {
  display: flex;
  justify-content: space-between;
}

.fields__block {
  position: relative;
  z-index: 3;
}

.fields__btn {
  display: flex;
  align-items: center;
  gap: 4px;
  height: 24px;
  background-color: transparent;
  color: #FFFFFF;
  border: 0;
  transition: color 0.36s ease-in-out;
}

.fields__btn:hover {
  color: #F87C09;
}

.fields__text {
  font-weight: 500;
  font-size: 10px;
  line-height: 130%;
}

.fields__list {
  display: none;
  position: absolute;
  top: calc(100% + 3px);
  min-width: 100%;
  padding: 15px;
  border-radius: 10px;
  background-color: #FFFFFF;
  color: #000000;
  white-space: nowrap;
  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);
}

.fields__list--active {
  display: block;
}

.fields__list-sort {
  left: 0;
}

.fields__list-filter {
  right: 0;
}

.fields__item {
  margin-bottom: 15px;
}

.fields__item:last-child {
  margin-bottom: 0;
}

.fields__button {
  background-color: #EAEAEA;
  border-radius: 16px;
  border: 0;
  padding: 8px;
  font-size: 12px;
  line-height: 100%;
}

.cart {
  max-width: 336px;
  display: flex;
  gap: 10px;
  background-color: #FFFFFF;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  color: #000000;
  padding: 8px 8px 10px 8px;
}

.cart__wrapper {
  position: relative;
  width: 100px;
  height: 148px;
  flex-shrink: 0;
}

.cart__image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 4px;
}

.cart__label {
  position: absolute;
  bottom: 8px;
  border-radius: 16px;
  left: 50%;
  transform: translateX(-50%);
  width: 92px;
  padding: 5px;
  color: #181818;
  background-color: #FFFFFF;
  font-weight: 400;
  font-size: 10px;
  line-height: 10px;
  text-align: center;
  white-space: nowrap;
}

.cart__content {
  padding-top: 3px;
}

.cart__title {
  margin-bottom: 2px;
  font-weight: 500;
  font-size: 16px;
  line-height: 120%;
}

.cart__author {
  margin-bottom: 10px;
  font-weight: 500;
  font-size: 12px;
  line-height: 120%;
  color: #6B6B6B;
}

.cart__description {
  margin-bottom: 6px;
  font-weight: 400;
  font-size: 12px;
  line-height: 120%;
}

.cart__rating {
  display: flex;
}

.cart__rating-star {
  width: 18px;
  height: 18px;
  margin-right: 1px;
}

.cart__rating-star:last-child {
  margin-right: 0;
}

.book {
  min-width: 320px;
  padding-left: 20px;
  padding-right: 20px;
}

.book__header {
  margin-bottom: 10px;
}

.book__ccontainer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-left: 0;
  padding-right: 0;
}

.book__container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.book__wrapper {
  width: 168px;
  margin: 0 auto;
  margin-bottom: 20px;
}

.book__img {
  display: block;
  width: 168px;
  height: 250px;
  border-radius: 6px;
}

.book__label {
  display: none;
}

.book__content {
  color: #FFFFFF;
}

.book__title {
  margin-bottom: 4px;
  font-weight: 700;
  font-size: 26px;
  line-height: 32px;
}

.book__author {
  margin-bottom: 15px;
  font-weight: 400;
  font-size: 14px;
  line-height: 120%;
  color: #EAEAEA;
}

.book__rating {
  display: flex;
  margin-bottom: 15px;
}

.book__rating-star {
  width: 36px;
  height: 36px;
}

.book__subtitle {
  margin-bottom: 5px;
  font-weight: 500;
  font-size: 12px;
  line-height: 130%;
}

.book__description {
  font-weight: 400;
  font-size: 12px;
  line-height: 130%;
}

.book__footer {
  width: 320px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.book__label-footer {
  display: block;
  width: 100%;
  max-width: 320px;
  padding: 18px 103px;
  border-radius: 30px;
  font-weight: 500;
  font-size: 14px;
  line-height: 100%;
}

.add__form {
  padding: 14px 0;
}

.add__form .footer {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.add__btn {
  border-radius: 8px;
  width: 320px;
  margin: 0 auto;
  border: 0;
  color: #FFFFFF;
  background-color: #F87C09;
  font-weight: 500;
  font-size: 14px;
  line-height: 100%;
}

.add__title {
  margin-bottom: 8px;
  font-weight: 700;
  font-size: 26px;
  line-height: 32px;
}

.add__subtitle {
  margin-bottom: 10px;
  font-weight: 500;
  font-size: 12px;
  line-height: 100%;
}

.add__step {
  margin-bottom: 30px;
  color: #EAEAEA;
  font-weight: 400;
  font-size: 14px;
  line-height: 100%;
}

.add__label {
  display: block;
  margin-bottom: 7px;
  font-weight: 500;
  font-size: 14px;
  line-height: 100%;
}

.add__text {
  width: 100%;
  height: 70px;
  margin-bottom: 25px;
  padding: 8px;
  background-color: #FFFFFF;
  border: 1px solid #EAEAEA;
  font-size: 18px;
  border-radius: 10px;
}

.add__text--area {
  min-height: 120px;
  margin-bottom: 80px;
  resize: none;
}

.upload {
  max-width: 222px;
  margin: 0 auto 15px;
}

.upload__subtitle {
  margin-bottom: 15px;
  font-weight: 500;
  font-size: 12px;
  line-height: 100%;
}

.upload__label {
  display: block;
  width: 222px;
  height: 290px;
  background-image: url("../img/file.jpg");
  background-size: cover;
  border-radius: 6px;
  cursor: pointer;
}

.upload__label--active {
  background-image: none;
  display: flex;
  justify-content: center;
  align-items: center;
}

.upload__preview {
  display: none;
}

.upload__file {
  display: none;
}

.status {
  margin-bottom: 40px;
}

.status__list {
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
}

.status__radio {
  position: absolute;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
}

.status__label {
  display: inline-block;
  padding: 8px;
  background-color: #FFFFFF;
  color: #000000;
  border-radius: 16px;
  outline: 1px solid transparent;
  transition: background-color 0.5s ease-in-out, outline-color 0.36s ease-in-out;
}

.status__label:hover {
  background-color: #EAEAEA;
}

.status__label:active {
  background-color: #F87C09;
}

.status__radio:focus + .status__label {
  outline-color: #6B6B6B;
}

.status__radio:active + .status__label {
  outline-color: #AEAAAA;
}

.status__radio:checked + .status__label {
  outline-color: #AEAAAA;
  background-color: #F87C09;
}

.star__list {
  display: flex;
  flex-direction: row-reverse;
  justify-content: flex-end;
}

.star__radio {
  position: absolute;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
}

.star__icon {
  width: 36px;
  height: 36px;
  background-image: url("../img/Star_white.svg");
  background-repeat: no-repeat;
  background-size: 36px;
  background-position: center;
}

.star__icon:hover,
.star__icon:hover ~ .star__icon,
.star__radio:checked ~ .star__icon {
  background-image: url("../img/Star.svg");
}

.footer {
  position: fixed;
  bottom: 0;
  right: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 74px;
  background-color: transparent;
}

.footer__btn {
  width: 320px;
  padding: 18px 90px;
}

.search {
  position: absolute;
  right: 0;
  top: -48px;
  width: 100%;
  transition: transform 0.5s ease-in-out;
}

.search__active {
  transform: translateY(56px);
}

.search__form {
  position: relative;
}

.search__input {
  width: 100%;
  height: 40px;
  padding: 3px 10px;
  background: #FFFFFF;
  border-radius: 20px;
  outline: 1px solid transparent;
  outline-offset: -1px;
  border: 0;
}

.search__input:focus {
  outline-color: #6B6B6B;
}

.search__button {
  position: absolute;
  top: 50%;
  right: 15px;
  width: 24px;
  height: 24px;
  transform: translateY(-50%);
  background-color: transparent;
  color: #000000;
  border: 0;
}

@media (min-width: 768px) {
  .container {
    padding: 0 35px;
  }

  .header {
    padding: 20px 0 15px;
  }

  .library::before {
    content: none;
  }

  .book {
    padding-left: 35px;
    padding-right: 35px;
  }

  .book__img {
    width: 300px;
    height: 450px;
    object-fit: contain;
  }

  .add__text--area {
    margin-bottom: 276px;
  }

  .footer {
    left: 0;
  }

  .search {
    top: -40px;
  }

  .search__input {
    max-width: 580px;
  }
}

@media (min-width: 1024px) {
  .container {
    padding: 0 45px;
  }

  .header {
    padding: 30px 0 25px;
  }

  .header__logo {
    height: 66px;
  }

  .header__btn-add {
    display: block;
    width: 320px;
    height: 50px;
    margin-right: 102px;
    background-color: #F87C09;
    border-radius: 8px;
    color: #FFFFFF;
    text-align: center;
    border: 0;
  }

  .library__footer {
    display: none;
  }

  .fields__block {
    max-width: 142px;
    width: 100%;
  }

  .fields__text {
    font-size: 14px;
    line-height: 130%;
  }

  .fields__list {
    top: calc(100% + 20px);
  }

  .fields__list-filter {
    display: block;
  }

  .cart {
    max-width: 377px;
    width: 377px;
  }

  .book {
    padding-left: 45px;
    padding-right: 45px;
  }

  .book__container {
    flex-direction: row;
    align-items: flex-start;
  }

  .book__wrapper {
    width: 249px;
    margin-right: 50px;
  }

  .book__img {
    width: 249px;
    height: 371px;
    flex-shrink: 0;
    margin-bottom: 20px;
  }

  .book__label {
    display: block;
    width: 100%;
    padding: 18px 20px;
    border-radius: 30px;
    background-color: #FFFFFF;
    border: 0;
    font-weight: 500;
    font-size: 14px;
    line-height: 100%;
  }

  .book__content {
    width: 580px;
  }

  .book__title {
    font-weight: 700;
    font-size: 40px;
    line-height: 49px;
  }

  .book__author {
    color: #EAEAEA;
    font-weight: 400;
    font-size: 18px;
    line-height: 120%;
  }

  .book__subtitle {
    font-size: 14px;
  }

  .book__description {
    color: #FFFFFF;
    font-size: 14px;
  }

  .book__label-footer {
    display: none;
    padding-bottom: 93px;
  }

  .add__container {
    padding: 0 118px;
  }

  .add__form {
    max-width: 698px;
    margin: 0 auto;
  }

  .add__title {
    font-weight: 700;
    font-size: 40px;
    line-height: 49px;
  }

  .add__step {
    font-weight: 400;
    font-size: 18px;
    line-height: 100%;
  }

  .add__text--area {
    margin-bottom: 90px;
  }
}

@media (min-width: 1280px) {
  .book {
    padding-left: 110px;
    padding-right: 110px;
  }

  .book__content {
    width: 671px;
  }
}

@media (max-width: 375px) {
  .library__list-container {
    padding: 0 12px;
  }

  .fields__list-sort {
    left: -8px;
  }

  .fields__list-filter {
    right: -8px;
  }

  .add__container {
    padding: 0 12px;
  }
}

@media (max-height: 500px) {
  .book__footer {
    width: 320px;
    left: 0;
  }

  .footer {
    width: auto;
    padding: 20px;
    background-color: transparent;
    right: 0;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
